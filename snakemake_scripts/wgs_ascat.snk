### Remove chromosomes with _ in loci file

rule make_loci_files_for_ascat:
	input:
		acloci = OUTDIR + "/reference/" + config["reference"]["ascat_acloci"],
		acloci_gc = OUTDIR + "/reference/" + config["reference"]["ascat_acloci_gc"]
	output:
		acloci = OUTDIR + "/results/ASCAT/1000G_phase3_GRCh38_maf0.3.cleaned.loci",
		acloci_gc = OUTDIR + "/results/ASCAT/1000G_phase3_GRCh38_maf0.3.cleaned.loci.gc",
	threads: 1
	resources:
		time = 15,
		mem_mb = 8500
	shell:
		"""
		sed '/_/d' {input.acloci} > {output.acloci}
		sed '/_/d' {input.acloci_gc} > {output.acloci_gc}
		"""

###
### COPY NUMBER USING ASCAT
###
rule alleleCount:
	input:
		bam = OUTDIR + "/filtered/{sample}.filtered.bam",
		index = OUTDIR + "/filtered/{sample}.filtered.bam.bai",
		acloci = OUTDIR + "/results/ASCAT/1000G_phase3_GRCh38_maf0.3.cleaned.loci",
		ref_fasta = OUTDIR + "/reference/" + config["reference"]["fasta"]
	output: OUTDIR + "/results/ASCAT/alleleCount/{sample}.alleleCount"
	threads: 2
	resources:
		time = 16*60,
		mem_mb = 8500
	container:
		config["singularity"]["battenberg"]
	group:"allelecount"
	shell:
		"""
		alleleCounter \
		-l {input.acloci} \
		-r {input.ref_fasta} \
		-b {input.bam} \
		-o {OUTDIR}/results/ASCAT/alleleCount/{wildcards.sample}.alleleCount
		"""

def getGender(wildcards):
		return expand("{gender}",gender = INPUT[INPUT.Patient == wildcards.patient].Sex.drop_duplicates())

###convert allele script from https://bitbucket.org/malinlarsson/somatic_wgs_pipeline/src/master/convertAlleleCounts.r
rule ConvertAlleleCounts:
	input:
		normal = OUTDIR + "/results/ASCAT/alleleCount/{patient}-N.alleleCount",
		tumor = OUTDIR + "/results/ASCAT/alleleCount/{tumor}.alleleCount",
		script = "AN_WGS_script/convertAlleleCounts.r"
	output:
		normalBaf = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{patient}-N.BAF",
		tumorBaf = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{tumor}.BAF",
		normalLogr = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{patient}-N.LogR",
		tumorLogr = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{tumor}.LogR"
	threads: 2
	params: gender = getGender
	resources:
		time = 2*60,
		mem_mb = 8500
	container:
		config["singularity"]["ascat"]
	group:"ConvertAlleleCounts"
	shell:
		"""
		cd {OUTDIR}/results/ASCAT/{wildcards.tumor}_vs_{wildcards.patient}-N
		Rscript {OUTDIR}/AN_WGS_script/convertAlleleCounts.r \
		{wildcards.tumor} {input.tumor} \
		{wildcards.patient}-N {input.normal} \
		{params.gender}
		"""

rule ascat:
	input:
		normalBaf = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{patient}-N.BAF",
		tumorBaf = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{tumor}.BAF",
		normalLogr = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{patient}-N.LogR",
		tumorLogr = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{tumor}.LogR",
		acLociGC = OUTDIR + "/results/ASCAT/1000G_phase3_GRCh38_maf0.3.cleaned.loci.gc"
	output:
		results = OUTDIR + "/results/ASCAT/{tumor}_vs_{patient}-N/{tumor}_vs_{patient}-N.tumor.cnvs.txt"
	params:
		gender = getGender
	threads: 2
	resources:
		time = 8*60,
		mem_mb = 8500
	container:
		config["singularity"]["ascat"]
	shell:
		"""
		for f in {OUTDIR}/results/ASCAT/{wildcards.tumor}_vs_{wildcards.patient}-N/*BAF \
		{OUTDIR}/results/ASCAT/{wildcards.tumor}_vs_{wildcards.patient}-N/*LogR; \
		do sed \'s/chr//g\' $f > {OUTDIR}/results/ASCAT/{wildcards.tumor}_vs_{wildcards.patient}-N/tmpFile; \
		mv {OUTDIR}/results/ASCAT/{wildcards.tumor}_vs_{wildcards.patient}-N/tmpFile $f;done
		cd {OUTDIR}/results/ASCAT/{wildcards.tumor}_vs_{wildcards.patient}-N
		Rscript {OUTDIR}/AN_WGS_script/run_ascat.r \
         {input.tumorBaf} \
         {input.tumorLogr} \
         {input.normalBaf} \
         {input.normalLogr} \
         {wildcards.tumor} \
         {OUTDIR}/results/ASCAT/{wildcards.tumor}_vs_{wildcards.patient}-N \
         {input.acLociGC} \
         {params.gender}
		cd ../../../
		mv {OUTDIR}/results/ASCAT/{wildcards.tumor}_vs_{wildcards.patient}-N/{wildcards.tumor}.cnvs.txt {output.results}
		"""
